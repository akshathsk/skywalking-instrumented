{"remainingRequest":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/thread-loader/dist/cjs.js!/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/babel-loader/lib/index.js!/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/ts-loader/index.js??ref--15-3!/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/related/profile/components/NewTask.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/related/profile/components/NewTask.vue","mtime":1661850019000},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/babel.config.js","mtime":1661850018000},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":1663881222784},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":1663881222612},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":1663881224500},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/ts-loader/index.js","mtime":1663881224684},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":1663881222784},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/vue-loader-v16/dist/index.js","mtime":1663881224404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3NrMTE3L2ZpbmFsLXByb2plY3QvYXBhY2hlLXNreXdhbGtpbmctYXBtLTkuMi4wL3NreXdhbGtpbmctdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCBhcyBfZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgdW5yZWYgYXMgX3VucmVmLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHdpdGhDdHggYXMgX3dpdGhDdHgsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi02YWNkZDE2MCIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJwcm9maWxlLXRhc2siCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAibGFiZWwiCn07CnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAibGFiZWwiCn07CnZhciBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAiZGF0ZSIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAgY2xhc3M6ICJsYWJlbCIKfTsKdmFyIF9ob2lzdGVkXzYgPSB7CiAgY2xhc3M6ICJsYWJlbCIKfTsKdmFyIF9ob2lzdGVkXzcgPSB7CiAgY2xhc3M6ICJsYWJlbCIKfTsKdmFyIF9ob2lzdGVkXzggPSB7CiAgY2xhc3M6ICJsYWJlbCIKfTsKaW1wb3J0IHsgcmVmIH0gZnJvbSAidnVlIjsKaW1wb3J0IHsgdXNlSTE4biB9IGZyb20gInZ1ZS1pMThuIjsKaW1wb3J0IHsgdXNlUHJvZmlsZVN0b3JlIH0gZnJvbSAiQC9zdG9yZS9tb2R1bGVzL3Byb2ZpbGUiOwppbXBvcnQgeyB1c2VTZWxlY3RvclN0b3JlIH0gZnJvbSAiQC9zdG9yZS9tb2R1bGVzL3NlbGVjdG9ycyI7CmltcG9ydCB7IHVzZUFwcFN0b3JlV2l0aE91dCB9IGZyb20gIkAvc3RvcmUvbW9kdWxlcy9hcHAiOwppbXBvcnQgeyBFbE1lc3NhZ2UgfSBmcm9tICJlbGVtZW50LXBsdXMiOwppbXBvcnQgeyBJbml0VGFza0ZpZWxkIH0gZnJvbSAiLi9kYXRhIjsKLyogZ2xvYmFsIGRlZmluZUVtaXRzICovCgpleHBvcnQgZGVmYXVsdCAvKiNfX1BVUkVfXyovX2RlZmluZUNvbXBvbmVudCh7CiAgZW1pdHM6IFsiY2xvc2UiXSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoX19wcm9wcywgX3JlZikgewogICAgdmFyIGVtaXRzID0gX3JlZi5lbWl0OwogICAgdmFyIHByb2ZpbGVTdG9yZSA9IHVzZVByb2ZpbGVTdG9yZSgpOwogICAgdmFyIHNlbGVjdG9yU3RvcmUgPSB1c2VTZWxlY3RvclN0b3JlKCk7CiAgICB2YXIgYXBwU3RvcmUgPSB1c2VBcHBTdG9yZVdpdGhPdXQoKTsKCiAgICB2YXIgX3VzZUkxOG4gPSB1c2VJMThuKCksCiAgICAgICAgdCA9IF91c2VJMThuLnQ7CgogICAgdmFyIGVuZHBvaW50TmFtZSA9IHJlZigiIik7CiAgICB2YXIgbW9uaXRvclRpbWUgPSByZWYoSW5pdFRhc2tGaWVsZC5tb25pdG9yVGltZUVuWzBdLnZhbHVlKTsKICAgIHZhciBtb25pdG9yRHVyYXRpb24gPSByZWYoSW5pdFRhc2tGaWVsZC5tb25pdG9yRHVyYXRpb25bMF0udmFsdWUpOwogICAgdmFyIHRpbWUgPSByZWYoYXBwU3RvcmUuZHVyYXRpb25Sb3cuc3RhcnQpOwogICAgdmFyIG1pblRocmVzaG9sZCA9IHJlZigwKTsKICAgIHZhciBkdW1wUGVyaW9kID0gcmVmKEluaXRUYXNrRmllbGQuZHVtcFBlcmlvZFswXS52YWx1ZSk7CiAgICB2YXIgbWF4U2FtcGxpbmdDb3VudCA9IHJlZihJbml0VGFza0ZpZWxkLm1heFNhbXBsaW5nQ291bnRbMF0udmFsdWUpOwoKICAgIGZ1bmN0aW9uIHNlYXJjaEVuZHBvaW50cyhfeCkgewogICAgICByZXR1cm4gX3NlYXJjaEVuZHBvaW50cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIGZ1bmN0aW9uIF9zZWFyY2hFbmRwb2ludHMoKSB7CiAgICAgIF9zZWFyY2hFbmRwb2ludHMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoa2V5d29yZCkgewogICAgICAgIHZhciBzZXJ2aWNlLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKHNlbGVjdG9yU3RvcmUuY3VycmVudFNlcnZpY2UpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBzZXJ2aWNlID0gc2VsZWN0b3JTdG9yZS5jdXJyZW50U2VydmljZS5pZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHByb2ZpbGVTdG9yZS5nZXRFbmRwb2ludHMoc2VydmljZSwga2V5d29yZCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCFyZXMuZXJyb3JzKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IocmVzLmVycm9ycyk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgZW5kcG9pbnROYW1lLnZhbHVlID0gcHJvZmlsZVN0b3JlLnRhc2tFbmRwb2ludHNbMF0udmFsdWU7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwogICAgICByZXR1cm4gX3NlYXJjaEVuZHBvaW50cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZU1vbml0b3JUaW1lKG9wdCkgewogICAgICBtb25pdG9yVGltZS52YWx1ZSA9IG9wdDsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGFuZ2VNb25pdG9yRHVyYXRpb24odmFsKSB7CiAgICAgIG1vbml0b3JEdXJhdGlvbi52YWx1ZSA9IHZhbDsKICAgIH0KCiAgICBmdW5jdGlvbiBjaGFuZ2VEdW1wUGVyaW9kKHZhbCkgewogICAgICBkdW1wUGVyaW9kLnZhbHVlID0gdmFsOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZU1heFNhbXBsaW5nQ291bnQob3B0KSB7CiAgICAgIG1heFNhbXBsaW5nQ291bnQudmFsdWUgPSBvcHRbMF0udmFsdWU7CiAgICB9CgogICAgZnVuY3Rpb24gY2hhbmdlRW5kcG9pbnQob3B0KSB7CiAgICAgIGVuZHBvaW50TmFtZS52YWx1ZSA9IG9wdFswXS52YWx1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVUYXNrKCkgewogICAgICByZXR1cm4gX2NyZWF0ZVRhc2suYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBfY3JlYXRlVGFzaygpIHsKICAgICAgX2NyZWF0ZVRhc2sgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBkYXRlLCBwYXJhbXMsIHJlcywgdGlwOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBlbWl0cygiY2xvc2UiKTsKICAgICAgICAgICAgICAgIGRhdGUgPSBtb25pdG9yVGltZS52YWx1ZSA9PT0gIjAiID8gbmV3IERhdGUoKSA6IHRpbWUudmFsdWU7CiAgICAgICAgICAgICAgICBwYXJhbXMgPSB7CiAgICAgICAgICAgICAgICAgIHNlcnZpY2VJZDogc2VsZWN0b3JTdG9yZS5jdXJyZW50U2VydmljZS5pZCwKICAgICAgICAgICAgICAgICAgZW5kcG9pbnROYW1lOiBlbmRwb2ludE5hbWUudmFsdWUsCiAgICAgICAgICAgICAgICAgIHN0YXJ0VGltZTogZGF0ZS5nZXRUaW1lKCksCiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBOdW1iZXIobW9uaXRvckR1cmF0aW9uLnZhbHVlKSwKICAgICAgICAgICAgICAgICAgbWluRHVyYXRpb25UaHJlc2hvbGQ6IE51bWJlcihtaW5UaHJlc2hvbGQudmFsdWUpLAogICAgICAgICAgICAgICAgICBkdW1wUGVyaW9kOiBOdW1iZXIoZHVtcFBlcmlvZC52YWx1ZSksCiAgICAgICAgICAgICAgICAgIG1heFNhbXBsaW5nQ291bnQ6IE51bWJlcihtYXhTYW1wbGluZ0NvdW50LnZhbHVlKQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBwcm9maWxlU3RvcmUuY3JlYXRlVGFzayhwYXJhbXMpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIXJlcy5lcnJvcnMpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA5OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IocmVzLmVycm9ycyk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIHRpcCA9IHJlcy5kYXRhLnRpcDsKCiAgICAgICAgICAgICAgICBpZiAoIXRpcCkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IodGlwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIEVsTWVzc2FnZS5zdWNjZXNzKCJUYXNrIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5Iik7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CiAgICAgIHJldHVybiBfY3JlYXRlVGFzay5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIGZ1bmN0aW9uIGNoYW5nZVRpbWVSYW5nZSh2YWwpIHsKICAgICAgdGltZS52YWx1ZSA9IHZhbDsKICAgIH0KCiAgICByZXR1cm4gZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSkgewogICAgICB2YXIgX2NvbXBvbmVudF9TZWxlY3RvciA9IF9yZXNvbHZlQ29tcG9uZW50KCJTZWxlY3RvciIpOwoKICAgICAgdmFyIF9jb21wb25lbnRfUmFkaW8gPSBfcmVzb2x2ZUNvbXBvbmVudCgiUmFkaW8iKTsKCiAgICAgIHZhciBfY29tcG9uZW50X1RpbWVQaWNrZXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiVGltZVBpY2tlciIpOwoKICAgICAgdmFyIF9jb21wb25lbnRfZWxfaW5wdXRfbnVtYmVyID0gX3Jlc29sdmVDb21wb25lbnQoImVsLWlucHV0LW51bWJlciIpOwoKICAgICAgdmFyIF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoImVsLWJ1dHRvbiIpOwoKICAgICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBfdG9EaXNwbGF5U3RyaW5nKF91bnJlZih0KSgiZW5kcG9pbnROYW1lIikpLCAxKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfU2VsZWN0b3IsIHsKICAgICAgICBjbGFzczogInByb2ZpbGUtaW5wdXQiLAogICAgICAgIHNpemU6ICJzbWFsbCIsCiAgICAgICAgdmFsdWU6IGVuZHBvaW50TmFtZS52YWx1ZSwKICAgICAgICBvcHRpb25zOiBfdW5yZWYocHJvZmlsZVN0b3JlKS5lbmRwb2ludHMsCiAgICAgICAgcGxhY2Vob2xkZXI6ICJTZWxlY3QgYSBlbmRwb2ludCIsCiAgICAgICAgaXNSZW1vdGU6IHRydWUsCiAgICAgICAgb25DaGFuZ2U6IGNoYW5nZUVuZHBvaW50LAogICAgICAgIG9uUXVlcnk6IHNlYXJjaEVuZHBvaW50cwogICAgICB9LCBudWxsLCA4LCBbInZhbHVlIiwgIm9wdGlvbnMiXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIF90b0Rpc3BsYXlTdHJpbmcoX3VucmVmKHQpKCJtb25pdG9yVGltZSIpKSwgMSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9SYWRpbywgewogICAgICAgIGNsYXNzOiAibWItNSIsCiAgICAgICAgdmFsdWU6IG1vbml0b3JUaW1lLnZhbHVlLAogICAgICAgIG9wdGlvbnM6IF91bnJlZihJbml0VGFza0ZpZWxkKS5tb25pdG9yVGltZUVuLAogICAgICAgIG9uQ2hhbmdlOiBjaGFuZ2VNb25pdG9yVGltZQogICAgICB9LCBudWxsLCA4LCBbInZhbHVlIiwgIm9wdGlvbnMiXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCBfaG9pc3RlZF80LCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfVGltZVBpY2tlciwgewogICAgICAgIHZhbHVlOiB0aW1lLnZhbHVlLAogICAgICAgIHBvc2l0aW9uOiAiYm90dG9tIiwKICAgICAgICBmb3JtYXQ6ICJZWVlZLU1NLUREIEhIOm1tOnNzIiwKICAgICAgICBvbklucHV0OiBjaGFuZ2VUaW1lUmFuZ2UKICAgICAgfSwgbnVsbCwgOCwgWyJ2YWx1ZSJdKV0pXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzUsIF90b0Rpc3BsYXlTdHJpbmcoX3VucmVmKHQpKCJtb25pdG9yRHVyYXRpb24iKSksIDEpLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9SYWRpbywgewogICAgICAgIGNsYXNzOiAibWItNSIsCiAgICAgICAgdmFsdWU6IG1vbml0b3JEdXJhdGlvbi52YWx1ZSwKICAgICAgICBvcHRpb25zOiBfdW5yZWYoSW5pdFRhc2tGaWVsZCkubW9uaXRvckR1cmF0aW9uLAogICAgICAgIG9uQ2hhbmdlOiBjaGFuZ2VNb25pdG9yRHVyYXRpb24KICAgICAgfSwgbnVsbCwgOCwgWyJ2YWx1ZSIsICJvcHRpb25zIl0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBfdG9EaXNwbGF5U3RyaW5nKF91bnJlZih0KSgibWluVGhyZXNob2xkIikpICsgIiAobXMpIiwgMSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0X251bWJlciwgewogICAgICAgIHNpemU6ICJzbWFsbCIsCiAgICAgICAgY2xhc3M6ICJwcm9maWxlLWlucHV0IiwKICAgICAgICBtaW46IDAsCiAgICAgICAgbW9kZWxWYWx1ZTogbWluVGhyZXNob2xkLnZhbHVlLAogICAgICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gbWluVGhyZXNob2xkLnZhbHVlID0gJGV2ZW50OwogICAgICAgIH0pCiAgICAgIH0sIG51bGwsIDgsIFsibW9kZWxWYWx1ZSJdKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNywgX3RvRGlzcGxheVN0cmluZyhfdW5yZWYodCkoImR1bXBQZXJpb2QiKSksIDEpLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9SYWRpbywgewogICAgICAgIGNsYXNzOiAibWItNSIsCiAgICAgICAgdmFsdWU6IGR1bXBQZXJpb2QudmFsdWUsCiAgICAgICAgb3B0aW9uczogX3VucmVmKEluaXRUYXNrRmllbGQpLmR1bXBQZXJpb2QsCiAgICAgICAgb25DaGFuZ2U6IGNoYW5nZUR1bXBQZXJpb2QKICAgICAgfSwgbnVsbCwgOCwgWyJ2YWx1ZSIsICJvcHRpb25zIl0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF84LCBfdG9EaXNwbGF5U3RyaW5nKF91bnJlZih0KSgibWF4U2FtcGxpbmdDb3VudCIpKSwgMSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X1NlbGVjdG9yLCB7CiAgICAgICAgc2l6ZTogInNtYWxsIiwKICAgICAgICB2YWx1ZTogbWF4U2FtcGxpbmdDb3VudC52YWx1ZSwKICAgICAgICBvcHRpb25zOiBfdW5yZWYoSW5pdFRhc2tGaWVsZCkubWF4U2FtcGxpbmdDb3VudCwKICAgICAgICBwbGFjZWhvbGRlcjogIlNlbGVjdCBhIGRhdGEiLAogICAgICAgIG9uQ2hhbmdlOiBjaGFuZ2VNYXhTYW1wbGluZ0NvdW50LAogICAgICAgIGNsYXNzOiAicHJvZmlsZS1pbnB1dCIKICAgICAgfSwgbnVsbCwgOCwgWyJ2YWx1ZSIsICJvcHRpb25zIl0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHsKICAgICAgICBvbkNsaWNrOiBjcmVhdGVUYXNrLAogICAgICAgIHR5cGU6ICJwcmltYXJ5IiwKICAgICAgICBjbGFzczogImNyZWF0ZS10YXNrLWJ0biIKICAgICAgfSwgewogICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBbX2NyZWF0ZVRleHRWTm9kZShfdG9EaXNwbGF5U3RyaW5nKF91bnJlZih0KSgiY3JlYXRlVGFzayIpKSwgMSldOwogICAgICAgIH0pLAogICAgICAgIF86IDEKICAgICAgfSldKV0pOwogICAgfTsKICB9Cn0pOw=="},null]}