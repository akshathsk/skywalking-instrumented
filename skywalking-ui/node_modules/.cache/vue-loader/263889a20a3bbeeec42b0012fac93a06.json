{"remainingRequest":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/related/profile/components/TaskList.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/related/profile/components/TaskList.vue","mtime":1661850019000},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":1663881222784},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":1663881222612},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":1663881224500},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/ts-loader/index.js","mtime":1663881224684},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":1663881222784},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/vue-loader-v16/dist/index.js","mtime":1663881224404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":null,"sources":["/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/related/profile/components/TaskList.vue"],"sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n<template>\n  <div class=\"profile-task-list flex-v\">\n    <div class=\"profile-task-wrapper flex-v\">\n      <div class=\"profile-t-tool flex-h\">{{ t(\"taskList\") }}</div>\n      <div class=\"profile-t-wrapper\">\n        <div class=\"no-data\" v-show=\"!profileStore.taskList.length\">\n          {{ t(\"noData\") }}\n        </div>\n        <table class=\"profile-t\">\n          <tr\n            class=\"profile-tr cp\"\n            v-for=\"(i, index) in profileStore.taskList\"\n            @click=\"changeTask(i)\"\n            :key=\"index\"\n          >\n            <td\n              class=\"profile-td\"\n              :class=\"{\n                selected: selectedTask.id === i.id,\n              }\"\n            >\n              <div class=\"ell\">\n                <span>{{ i.endpointName }}</span>\n                <a class=\"profile-btn r\" @click=\"viewTask($event, i)\">\n                  <Icon iconName=\"view\" size=\"middle\" />\n                </a>\n              </div>\n              <div class=\"grey ell sm\">\n                <span class=\"mr-10 sm\">\n                  {{ dateFormat(i.startTime) }}\n                </span>\n                <span class=\"mr-10 sm\">\n                  {{ dateFormat(i.startTime + i.duration * 60 * 1000) }}\n                </span>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n  <el-dialog\n    v-model=\"viewDetail\"\n    :destroy-on-close=\"true\"\n    fullscreen\n    @closed=\"viewDetail = false\"\n  >\n    <div class=\"profile-detail flex-v\">\n      <div>\n        <h5 class=\"mb-10\">{{ t(\"task\") }}.</h5>\n        <div class=\"mb-10 clear item\">\n          <span class=\"g-sm-4 grey\">{{ t(\"service\") }}:</span>\n          <span class=\"g-sm-8 wba\">{{ service }}</span>\n        </div>\n        <div class=\"mb-10 clear item\">\n          <span class=\"g-sm-4 grey\">{{ t(\"endpoint\") }}:</span>\n          <span class=\"g-sm-8 wba\">{{ selectedTask.endpointName }}</span>\n        </div>\n        <div class=\"mb-10 clear item\">\n          <span class=\"g-sm-4 grey\">{{ t(\"monitorTime\") }}:</span>\n          <span class=\"g-sm-8 wba\">\n            {{ dateFormat(selectedTask.startTime) }}\n          </span>\n        </div>\n        <div class=\"mb-10 clear item\">\n          <span class=\"g-sm-4 grey\">{{ t(\"monitorDuration\") }}:</span\n          ><span class=\"g-sm-8 wba\">{{ selectedTask.duration }} min</span>\n        </div>\n        <div class=\"mb-10 clear item\">\n          <span class=\"g-sm-4 grey\">{{ t(\"minThreshold\") }}:</span>\n          <span class=\"g-sm-8 wba\">\n            {{ selectedTask.minDurationThreshold }} ms\n          </span>\n        </div>\n        <div class=\"mb-10 clear item\">\n          <span class=\"g-sm-4 grey\">{{ t(\"dumpPeriod\") }}:</span>\n          <span class=\"g-sm-8 wba\">{{ selectedTask.dumpPeriod }}</span>\n        </div>\n        <div class=\"mb-10 clear item\">\n          <span class=\"g-sm-4 grey\">{{ t(\"maxSamplingCount\") }}:</span>\n          <span class=\"g-sm-8 wba\">{{ selectedTask.maxSamplingCount }}</span>\n        </div>\n      </div>\n      <div>\n        <h5\n          class=\"mb-10 mt-10\"\n          v-show=\"selectedTask.logs && selectedTask.logs.length\"\n        >\n          {{ t(\"logs\") }}.\n        </h5>\n        <div\n          class=\"log-item\"\n          v-for=\"(i, index) in Object.keys(instanceLogs)\"\n          :key=\"index\"\n        >\n          <div class=\"mb-10 sm\">\n            <span class=\"mr-10 grey\">{{ t(\"instance\") }}:</span>\n            <span>{{ i }}</span>\n          </div>\n          <div v-for=\"(d, index) in instanceLogs[i]\" :key=\"index\">\n            <span class=\"mr-10 grey\">{{ t(\"operationType\") }}:</span>\n            <span class=\"mr-20\">{{ d.operationType }}</span>\n            <span class=\"mr-10 grey\">{{ t(\"time\") }}:</span>\n            <span>{{ dateFormat(d.operationTime) }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport { useSelectorStore } from \"@/store/modules/selectors\";\nimport { useProfileStore } from \"@/store/modules/profile\";\nimport { TaskLog, TaskListItem } from \"@/types/profile\";\nimport { ElMessage } from \"element-plus\";\nimport { dateFormat } from \"@/utils/dateFormat\";\n\nconst { t } = useI18n();\nconst profileStore = useProfileStore();\nconst selectorStore = useSelectorStore();\nconst viewDetail = ref<boolean>(false);\nconst service = ref<string>(\"\");\nconst selectedTask = ref<TaskListItem | Record<string, never>>({});\nconst instanceLogs = ref<TaskLog | any>({});\n\nasync function changeTask(item: TaskListItem) {\n  profileStore.setCurrentSegment({});\n  selectedTask.value = item;\n  const res = await profileStore.getSegmentList({ taskID: item.id });\n  if (res.errors) {\n    ElMessage.error(res.errors);\n  }\n}\n\nasync function viewTask(e: Event, item: TaskListItem) {\n  window.event ? (window.event.cancelBubble = true) : e.stopPropagation();\n  viewDetail.value = true;\n  selectedTask.value = item;\n  service.value = (\n    selectorStore.services.filter((s: any) => s.id === item.serviceId)[0] || {}\n  ).label;\n  const res = await profileStore.getTaskLogs({ taskID: item.id });\n\n  if (res.errors) {\n    ElMessage.error(res.errors);\n    return;\n  }\n  item.logs = profileStore.taskLogs;\n  instanceLogs.value = {};\n  for (const d of item.logs) {\n    if (instanceLogs.value[d.instanceName]) {\n      instanceLogs.value[d.instanceName].push({\n        operationType: d.operationType,\n        operationTime: d.operationTime,\n      });\n    } else {\n      instanceLogs.value[d.instanceName] = [\n        { operationType: d.operationType, operationTime: d.operationTime },\n      ];\n    }\n  }\n  selectedTask.value = item;\n}\n</script>\n<style lang=\"scss\" scoped>\n.profile-task-list {\n  width: 300px;\n  height: calc((100% - 60px) / 2);\n  overflow: auto;\n}\n\n.item span {\n  height: 21px;\n}\n\n.profile-td {\n  padding: 5px 10px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.07);\n\n  &.selected {\n    background-color: #ededed;\n  }\n}\n\n.no-data {\n  text-align: center;\n  margin-top: 10px;\n}\n\n.profile-t-wrapper {\n  overflow: auto;\n  flex-grow: 1;\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.profile-t {\n  width: 100%;\n  border-spacing: 0;\n  table-layout: fixed;\n  flex-grow: 1;\n  position: relative;\n}\n\n.profile-tr {\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.04);\n  }\n}\n\n.profile-segment {\n  border-top: 1px solid rgba(0, 0, 0, 0.07);\n}\n\n.profile-t-tool {\n  padding: 5px 10px;\n  font-weight: bold;\n  border-right: 1px solid rgba(0, 0, 0, 0.07);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.07);\n  background: #f3f4f9;\n}\n\n.log-item {\n  margin-top: 20px;\n}\n\n.profile-btn {\n  color: #3d444f;\n  padding: 1px 3px;\n  border-radius: 2px;\n  font-size: 12px;\n  float: right;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD;;;;AARwB;AASxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvnlE;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}]}