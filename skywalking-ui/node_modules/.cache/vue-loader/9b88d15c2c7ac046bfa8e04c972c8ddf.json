{"remainingRequest":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/related/profile/components/SpanTree.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/related/profile/components/SpanTree.vue","mtime":1661850019000},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":1663881222784},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":1663881222612},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":1663881224500},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/ts-loader/index.js","mtime":1663881224684},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":1663881222784},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/vue-loader-v16/dist/index.js","mtime":1663881224404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IGFzIF9kZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnCmltcG9ydCB7IHVucmVmIGFzIF91bnJlZiwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHggYXMgX3dpdGhDdHgsIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiCgpjb25zdCBfd2l0aFNjb3BlSWQgPSBuID0+IChfcHVzaFNjb3BlSWQoImRhdGEtdi1lMzM4MmY4MiIpLG49bigpLF9wb3BTY29wZUlkKCksbikKY29uc3QgX2hvaXN0ZWRfMSA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJwcm9maWxlLXRyYWNlLWRhc2hib2FyZCIKfQpjb25zdCBfaG9pc3RlZF8yID0geyBjbGFzczogInByb2ZpbGUtdHJhY2UtZGV0YWlsLXdyYXBwZXIiIH0KY29uc3QgX2hvaXN0ZWRfMyA9IHsgY2xhc3M6ICJwcm9maWxlLXRhYmxlIiB9CgppbXBvcnQgeyByZWYsIGNvbXB1dGVkIH0gZnJvbSAidnVlIjsKaW1wb3J0IHsgdXNlSTE4biB9IGZyb20gInZ1ZS1pMThuIjsKaW1wb3J0IFRhYmxlIGZyb20gIi4uLy4uL3RyYWNlL2NvbXBvbmVudHMvVGFibGUvSW5kZXgudnVlIjsKaW1wb3J0IHsgdXNlUHJvZmlsZVN0b3JlIH0gZnJvbSAiQC9zdG9yZS9tb2R1bGVzL3Byb2ZpbGUiOwppbXBvcnQgU2VsZWN0b3IgZnJvbSAiQC9jb21wb25lbnRzL1NlbGVjdG9yLnZ1ZSI7CmltcG9ydCB7IFNwYW4gfSBmcm9tICJAL3R5cGVzL3RyYWNlIjsKaW1wb3J0IHsgT3B0aW9uIH0gZnJvbSAiQC90eXBlcy9hcHAiOwppbXBvcnQgeyBFbE1lc3NhZ2UgfSBmcm9tICJlbGVtZW50LXBsdXMiOwppbXBvcnQgeyBQcm9maWxlTW9kZSB9IGZyb20gIi4vZGF0YSI7CgovKiBnbG9iYWwgZGVmaW5lRW1pdHMqLwoKZXhwb3J0IGRlZmF1bHQgLyojX19QVVJFX18qL19kZWZpbmVDb21wb25lbnQoewogIGVtaXRzOiBbImxvYWRpbmciXSwKICBzZXR1cChfX3Byb3BzLCB7IGVtaXQ6IGVtaXRzIH0pIHsKCgpjb25zdCB7IHQgfSA9IHVzZUkxOG4oKTsKY29uc3QgcHJvZmlsZVN0b3JlID0gdXNlUHJvZmlsZVN0b3JlKCk7CmNvbnN0IG1vZGUgPSByZWY8c3RyaW5nPigiaW5jbHVkZSIpOwpjb25zdCBtZXNzYWdlID0gcmVmPHN0cmluZz4oIiIpOwpjb25zdCB0aW1lUmFuZ2UgPSByZWY8QXJyYXk8eyBzdGFydDogbnVtYmVyOyBlbmQ6IG51bWJlciB9Pj4oW10pOwpjb25zdCB0cmFjZUlkID0gcmVmPHN0cmluZz4oIiIpOwpjb25zdCB0cmFjZUlkcyA9IGNvbXB1dGVkKCgpID0+CiAgKHByb2ZpbGVTdG9yZS5jdXJyZW50U2VnbWVudC50cmFjZUlkcyB8fCBbXSkubWFwKChpZDogc3RyaW5nKSA9PiAoewogICAgbGFiZWw6IGlkLAogICAgdmFsdWU6IGlkLAogIH0pKQopOwoKZnVuY3Rpb24gc2VsZWN0U3BhbihzcGFuOiBTcGFuKSB7CiAgcHJvZmlsZVN0b3JlLnNldEN1cnJlbnRTcGFuKHNwYW4pOwp9CgpmdW5jdGlvbiBzcGFuTW9kZUNoYW5nZShpdGVtOiBPcHRpb25bXSkgewogIG1vZGUudmFsdWUgPSBpdGVtWzBdLnZhbHVlOwogIHVwZGF0ZVRpbWVSYW5nZSgpOwp9CgpmdW5jdGlvbiBjaGFuZ2VUcmFjZUlkKG9wdDogT3B0aW9uW10pIHsKICB0cmFjZUlkLnZhbHVlID0gb3B0WzBdLnZhbHVlOwp9Cgphc3luYyBmdW5jdGlvbiBhbmFseXplUHJvZmlsZSgpIHsKICBlbWl0cygibG9hZGluZyIsIHRydWUpOwogIHVwZGF0ZVRpbWVSYW5nZSgpOwogIGNvbnN0IHJlcyA9IGF3YWl0IHByb2ZpbGVTdG9yZS5nZXRQcm9maWxlQW5hbHl6ZSh7CiAgICBzZWdtZW50SWQ6IHByb2ZpbGVTdG9yZS5jdXJyZW50U2VnbWVudC5zZWdtZW50SWQsCiAgICB0aW1lUmFuZ2VzOiB0aW1lUmFuZ2UudmFsdWUsCiAgfSk7CiAgZW1pdHMoImxvYWRpbmciLCBmYWxzZSk7CiAgaWYgKHJlcy5lcnJvcnMpIHsKICAgIEVsTWVzc2FnZS5lcnJvcihyZXMuZXJyb3JzKTsKICB9CiAgaWYgKHJlcy50aXApIHsKICAgIG1lc3NhZ2UudmFsdWUgPSByZXMudGlwOwogIH0KfQoKZnVuY3Rpb24gdXBkYXRlVGltZVJhbmdlKCkgewogIGlmIChtb2RlLnZhbHVlID09PSAiaW5jbHVkZSIpIHsKICAgIHRpbWVSYW5nZS52YWx1ZSA9IFsKICAgICAgewogICAgICAgIHN0YXJ0OiBwcm9maWxlU3RvcmUuY3VycmVudFNwYW4uc3RhcnRUaW1lLAogICAgICAgIGVuZDogcHJvZmlsZVN0b3JlLmN1cnJlbnRTcGFuLmVuZFRpbWUsCiAgICAgIH0sCiAgICBdOwogIH0gZWxzZSB7CiAgICBjb25zdCB7IGNoaWxkcmVuLCBzdGFydFRpbWUsIGVuZFRpbWUgfSA9IHByb2ZpbGVTdG9yZS5jdXJyZW50U3BhbjsKICAgIGxldCBkYXRlUmFuZ2UgPSBbXTsKCiAgICBpZiAoIWNoaWxkcmVuIHx8ICFjaGlsZHJlbi5sZW5ndGgpIHsKICAgICAgdGltZVJhbmdlLnZhbHVlID0gWwogICAgICAgIHsKICAgICAgICAgIHN0YXJ0OiB0aGlzLmN1cnJlbnRTcGFuLnN0YXJ0VGltZSwKICAgICAgICAgIGVuZDogdGhpcy5jdXJyZW50U3Bhbi5lbmRUaW1lLAogICAgICAgIH0sCiAgICAgIF07CiAgICAgIHJldHVybjsKICAgIH0KICAgIGZvciAoY29uc3QgaXRlbSBvZiBjaGlsZHJlbikgewogICAgICBkYXRlUmFuZ2UucHVzaCgKICAgICAgICB7CiAgICAgICAgICBzdGFydDogc3RhcnRUaW1lLAogICAgICAgICAgZW5kOiBpdGVtLnN0YXJ0VGltZSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHN0YXJ0OiBpdGVtLmVuZFRpbWUsCiAgICAgICAgICBlbmQ6IGVuZFRpbWUsCiAgICAgICAgfQogICAgICApOwogICAgfQogICAgZGF0ZVJhbmdlID0gZGF0ZVJhbmdlLnJlZHVjZSgocHJldjogYW55W10sIGN1cikgPT4gewogICAgICBsZXQgaXNVcGRhdGUgPSBmYWxzZTsKICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHByZXYpIHsKICAgICAgICBpZiAoY3VyLnN0YXJ0IDw9IGl0ZW0uZW5kICYmIGl0ZW0uc3RhcnQgPD0gY3VyLnN0YXJ0KSB7CiAgICAgICAgICBpc1VwZGF0ZSA9IHRydWU7CiAgICAgICAgICBpdGVtLnN0YXJ0ID0gaXRlbS5zdGFydCA8IGN1ci5zdGFydCA/IGN1ci5zdGFydCA6IGl0ZW0uc3RhcnQ7CiAgICAgICAgICBpdGVtLmVuZCA9IGl0ZW0uZW5kIDwgY3VyLmVuZCA/IGl0ZW0uZW5kIDogY3VyLmVuZDsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYgKCFpc1VwZGF0ZSkgewogICAgICAgIHByZXYucHVzaChjdXIpOwogICAgICB9CiAgICAgIHJldHVybiBwcmV2OwogICAgfSwgW10pOwogICAgdGltZVJhbmdlLnZhbHVlID0gZGF0ZVJhbmdlLmZpbHRlcigoaXRlbTogYW55KSA9PiBpdGVtLnN0YXJ0ICE9PSBpdGVtLmVuZCk7CiAgfQp9CgpyZXR1cm4gKF9jdHg6IGFueSxfY2FjaGU6IGFueSkgPT4gewogIGNvbnN0IF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoImVsLWJ1dHRvbiIpIQoKICByZXR1cm4gKF91bnJlZihwcm9maWxlU3RvcmUpLmN1cnJlbnRTZWdtZW50KQogICAgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbCiAgICAgICAgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgWwogICAgICAgICAgX2NyZWF0ZVZOb2RlKFNlbGVjdG9yLCB7CiAgICAgICAgICAgIHNpemU6ICJzbWFsbCIsCiAgICAgICAgICAgIHZhbHVlOiB0cmFjZUlkLnZhbHVlIHx8IChfdW5yZWYodHJhY2VJZHMpWzBdICYmIF91bnJlZih0cmFjZUlkcylbMF0udmFsdWUpIHx8ICcnLAogICAgICAgICAgICBvcHRpb25zOiBfdW5yZWYodHJhY2VJZHMpLAogICAgICAgICAgICBwbGFjZWhvbGRlcjogIlNlbGVjdCBhIHRyYWNlIGlkIiwKICAgICAgICAgICAgb25DaGFuZ2U6IGNoYW5nZVRyYWNlSWQsCiAgICAgICAgICAgIGNsYXNzOiAicHJvZmlsZS10cmFjZS1kZXRhaWwtaWRzIG1yLTEwIgogICAgICAgICAgfSwgbnVsbCwgOCwgWyJ2YWx1ZSIsICJvcHRpb25zIl0pLAogICAgICAgICAgX2NyZWF0ZVZOb2RlKFNlbGVjdG9yLCB7CiAgICAgICAgICAgIHNpemU6ICJzbWFsbCIsCiAgICAgICAgICAgIHZhbHVlOiBtb2RlLnZhbHVlLAogICAgICAgICAgICBvcHRpb25zOiBfdW5yZWYoUHJvZmlsZU1vZGUpLAogICAgICAgICAgICBwbGFjZWhvbGRlcjogIlNlbGVjdCBhIG1vZGUiLAogICAgICAgICAgICBvbkNoYW5nZTogc3Bhbk1vZGVDaGFuZ2UsCiAgICAgICAgICAgIGNsYXNzOiAibXItMTAiCiAgICAgICAgICB9LCBudWxsLCA4LCBbInZhbHVlIiwgIm9wdGlvbnMiXSksCiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHsKICAgICAgICAgICAgdHlwZTogInByaW1hcnkiLAogICAgICAgICAgICBzaXplOiAic21hbGwiLAogICAgICAgICAgICBvbkNsaWNrOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9ICgkZXZlbnQ6IGFueSkgPT4gKGFuYWx5emVQcm9maWxlKCkpKQogICAgICAgICAgfSwgewogICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbCiAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShfdG9EaXNwbGF5U3RyaW5nKF91bnJlZih0KSgiYW5hbHl6ZSIpKSwgMSkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF86IDEKICAgICAgICAgIH0pCiAgICAgICAgXSksCiAgICAgICAgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgWwogICAgICAgICAgX2NyZWF0ZVZOb2RlKFRhYmxlLCB7CiAgICAgICAgICAgIGRhdGE6IF91bnJlZihwcm9maWxlU3RvcmUpLnNlZ21lbnRTcGFucywKICAgICAgICAgICAgdHJhY2VJZDogCiAgICAgICAgICBfdW5yZWYocHJvZmlsZVN0b3JlKS5jdXJyZW50U2VnbWVudC50cmFjZUlkcyAmJgogICAgICAgICAgX3VucmVmKHByb2ZpbGVTdG9yZSkuY3VycmVudFNlZ21lbnQudHJhY2VJZHNbMF0KICAgICAgICAsCiAgICAgICAgICAgIHNob3dCdG5EZXRhaWw6IHRydWUsCiAgICAgICAgICAgIGhlYWRlclR5cGU6ICJwcm9maWxlIiwKICAgICAgICAgICAgb25TZWxlY3Q6IHNlbGVjdFNwYW4KICAgICAgICAgIH0sIG51bGwsIDgsIFsiZGF0YSIsICJ0cmFjZUlkIl0pCiAgICAgICAgXSkKICAgICAgXSkpCiAgICA6IF9jcmVhdGVDb21tZW50Vk5vZGUoIiIsIHRydWUpCn0KfQoKfSk="},{"version":3,"file":null,"sources":["/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/related/profile/components/SpanTree.vue"],"sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n<template>\n  <div class=\"profile-trace-dashboard\" v-if=\"profileStore.currentSegment\">\n    <div class=\"profile-trace-detail-wrapper\">\n      <Selector\n        size=\"small\"\n        :value=\"traceId || (traceIds[0] && traceIds[0].value) || ''\"\n        :options=\"traceIds\"\n        placeholder=\"Select a trace id\"\n        @change=\"changeTraceId\"\n        class=\"profile-trace-detail-ids mr-10\"\n      />\n      <Selector\n        size=\"small\"\n        :value=\"mode\"\n        :options=\"ProfileMode\"\n        placeholder=\"Select a mode\"\n        @change=\"spanModeChange\"\n        class=\"mr-10\"\n      />\n      <el-button type=\"primary\" size=\"small\" @click=\"analyzeProfile()\">\n        {{ t(\"analyze\") }}\n      </el-button>\n    </div>\n    <div class=\"profile-table\">\n      <Table\n        :data=\"profileStore.segmentSpans\"\n        :traceId=\"\n          profileStore.currentSegment.traceIds &&\n          profileStore.currentSegment.traceIds[0]\n        \"\n        :showBtnDetail=\"true\"\n        headerType=\"profile\"\n        @select=\"selectSpan\"\n      />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { ref, computed } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport Table from \"../../trace/components/Table/Index.vue\";\nimport { useProfileStore } from \"@/store/modules/profile\";\nimport Selector from \"@/components/Selector.vue\";\nimport { Span } from \"@/types/trace\";\nimport { Option } from \"@/types/app\";\nimport { ElMessage } from \"element-plus\";\nimport { ProfileMode } from \"./data\";\n\n/* global defineEmits*/\nconst emits = defineEmits([\"loading\"]);\nconst { t } = useI18n();\nconst profileStore = useProfileStore();\nconst mode = ref<string>(\"include\");\nconst message = ref<string>(\"\");\nconst timeRange = ref<Array<{ start: number; end: number }>>([]);\nconst traceId = ref<string>(\"\");\nconst traceIds = computed(() =>\n  (profileStore.currentSegment.traceIds || []).map((id: string) => ({\n    label: id,\n    value: id,\n  }))\n);\n\nfunction selectSpan(span: Span) {\n  profileStore.setCurrentSpan(span);\n}\n\nfunction spanModeChange(item: Option[]) {\n  mode.value = item[0].value;\n  updateTimeRange();\n}\n\nfunction changeTraceId(opt: Option[]) {\n  traceId.value = opt[0].value;\n}\n\nasync function analyzeProfile() {\n  emits(\"loading\", true);\n  updateTimeRange();\n  const res = await profileStore.getProfileAnalyze({\n    segmentId: profileStore.currentSegment.segmentId,\n    timeRanges: timeRange.value,\n  });\n  emits(\"loading\", false);\n  if (res.errors) {\n    ElMessage.error(res.errors);\n  }\n  if (res.tip) {\n    message.value = res.tip;\n  }\n}\n\nfunction updateTimeRange() {\n  if (mode.value === \"include\") {\n    timeRange.value = [\n      {\n        start: profileStore.currentSpan.startTime,\n        end: profileStore.currentSpan.endTime,\n      },\n    ];\n  } else {\n    const { children, startTime, endTime } = profileStore.currentSpan;\n    let dateRange = [];\n\n    if (!children || !children.length) {\n      timeRange.value = [\n        {\n          start: this.currentSpan.startTime,\n          end: this.currentSpan.endTime,\n        },\n      ];\n      return;\n    }\n    for (const item of children) {\n      dateRange.push(\n        {\n          start: startTime,\n          end: item.startTime,\n        },\n        {\n          start: item.endTime,\n          end: endTime,\n        }\n      );\n    }\n    dateRange = dateRange.reduce((prev: any[], cur) => {\n      let isUpdate = false;\n      for (const item of prev) {\n        if (cur.start <= item.end && item.start <= cur.start) {\n          isUpdate = true;\n          item.start = item.start < cur.start ? cur.start : item.start;\n          item.end = item.end < cur.end ? item.end : cur.end;\n        }\n      }\n      if (!isUpdate) {\n        prev.push(cur);\n      }\n      return prev;\n    }, []);\n    timeRange.value = dateRange.filter((item: any) => item.start !== item.end);\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.profile-trace-dashboard {\n  padding: 5px;\n  flex-shrink: 0;\n  height: 50%;\n  width: 100%;\n  min-width: 800px;\n}\n\n.profile-table {\n  height: calc(100% - 30px);\n  overflow: auto;\n}\n\n.profile-trace-detail-wrapper {\n  padding: 5px 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  width: 100%;\n}\n\n.profile-trace-detail-ids {\n  width: 300px;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;AAoDA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;AAXC;AAYe;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AACH,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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"}]}