{"remainingRequest":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/graphs/components/ColumnGraph.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/graphs/components/ColumnGraph.vue","mtime":1661850019000},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1663881224252},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":1663881222784},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/thread-loader/dist/cjs.js","mtime":1663881222612},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/babel-loader/lib/index.js","mtime":1663881224500},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/ts-loader/index.js","mtime":1663881224684},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/cache-loader/dist/cjs.js","mtime":1663881222784},{"path":"/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/node_modules/vue-loader-v16/dist/index.js","mtime":1663881224404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IGFzIF9kZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnCmltcG9ydCB7IHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB1bnJlZiBhcyBfdW5yZWYsIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHdpdGhDdHggYXMgX3dpdGhDdHgsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSIKCmNvbnN0IF93aXRoU2NvcGVJZCA9IG4gPT4gKF9wdXNoU2NvcGVJZCgiZGF0YS12LTY1NTM2M2Y1Iiksbj1uKCksX3BvcFNjb3BlSWQoKSxuKQpjb25zdCBfaG9pc3RlZF8xID0geyBjbGFzczogImNoYXJ0IiB9CmNvbnN0IF9ob2lzdGVkXzIgPSB7CiAga2V5OiAxLAogIGNsYXNzOiAiaXRlbSBmbGV4LWgiCn0KY29uc3QgX2hvaXN0ZWRfMyA9IHsgY2xhc3M6ICJ0cmVuZCIgfQpjb25zdCBfaG9pc3RlZF80ID0geyBjbGFzczogInZpZXctbGluZSIgfQpjb25zdCBfaG9pc3RlZF81ID0geyBjbGFzczogInZhbHVlIiB9CgppbXBvcnQgdHlwZSB7IFByb3BUeXBlIH0gZnJvbSAidnVlIjsKaW1wb3J0IHsgTWV0cmljQ29uZmlnT3B0IH0gZnJvbSAiQC90eXBlcy9kYXNoYm9hcmQiOwppbXBvcnQgeyB1c2VMaXN0Q29uZmlnIH0gZnJvbSAiQC9ob29rcy91c2VMaXN0Q29uZmlnIjsKaW1wb3J0IExpbmUgZnJvbSAiLi4vTGluZS52dWUiOwppbXBvcnQgQ2FyZCBmcm9tICIuLi9DYXJkLnZ1ZSI7CgovKmdsb2JhbCBkZWZpbmVQcm9wcyAqLwoKZXhwb3J0IGRlZmF1bHQgLyojX19QVVJFX18qL19kZWZpbmVDb21wb25lbnQoewogIHByb3BzOiB7CiAgY29sTWV0cmljczogeyB0eXBlOiBPYmplY3QgfSwKICBjb25maWc6IHsKICAgIHR5cGU6IE9iamVjdCBhcyBQcm9wVHlwZTwKICAgICAgewogICAgICAgIGk6IHN0cmluZzsKICAgICAgICBtZXRyaWNzOiBzdHJpbmdbXTsKICAgICAgICBtZXRyaWNUeXBlczogc3RyaW5nW107CiAgICAgIH0gJiB7IG1ldHJpY0NvbmZpZzogTWV0cmljQ29uZmlnT3B0W10gfQogICAgPiwKICAgIGRlZmF1bHQ6ICgpID0+ICh7fSksCiAgfSwKICBpbnRlcnZhbFRpbWU6IHsgdHlwZTogQXJyYXkgYXMgUHJvcFR5cGU8c3RyaW5nW10+LCBkZWZhdWx0OiAoKSA9PiBbXSB9LAp9LAogIHNldHVwKF9fcHJvcHMpIHsKCmNvbnN0IHByb3BzID0gX19wcm9wcwoKCgpmdW5jdGlvbiBnZXRVbml0KGluZGV4OiBzdHJpbmcpIHsKICBjb25zdCBpID0gTnVtYmVyKGluZGV4KTsKICBjb25zdCB1ID0KICAgIHByb3BzLmNvbmZpZy5tZXRyaWNDb25maWcgJiYKICAgIHByb3BzLmNvbmZpZy5tZXRyaWNDb25maWdbaV0gJiYKICAgIHByb3BzLmNvbmZpZy5tZXRyaWNDb25maWdbaV0udW5pdDsKICBpZiAodSkgewogICAgcmV0dXJuIGAoJHtlbmNvZGVVUklDb21wb25lbnQodSl9KWA7CiAgfQogIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoIiIpOwp9CmZ1bmN0aW9uIGdldExhYmVsKG1ldHJpYzogc3RyaW5nLCBpbmRleDogc3RyaW5nKSB7CiAgY29uc3QgaSA9IE51bWJlcihpbmRleCk7CiAgY29uc3QgbGFiZWwgPQogICAgcHJvcHMuY29uZmlnLm1ldHJpY0NvbmZpZyAmJgogICAgcHJvcHMuY29uZmlnLm1ldHJpY0NvbmZpZ1tpXSAmJgogICAgcHJvcHMuY29uZmlnLm1ldHJpY0NvbmZpZ1tpXS5sYWJlbDsKICBpZiAobGFiZWwpIHsKICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQobGFiZWwpOwogIH0KICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KG1ldHJpYyk7Cn0KCnJldHVybiAoX2N0eDogYW55LF9jYWNoZTogYW55KSA9PiB7CiAgY29uc3QgX2NvbXBvbmVudF9JY29uID0gX3Jlc29sdmVDb21wb25lbnQoIkljb24iKSEKICBjb25zdCBfY29tcG9uZW50X2VsX3BvcG92ZXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiZWwtcG9wb3ZlciIpIQogIGNvbnN0IF9jb21wb25lbnRfZWxfdGFibGVfY29sdW1uID0gX3Jlc29sdmVDb21wb25lbnQoImVsLXRhYmxlLWNvbHVtbiIpIQoKICByZXR1cm4gKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChfX3Byb3BzLmNvbE1ldHJpY3MsIChtZXRyaWMsIGluZGV4KSA9PiB7CiAgICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZWxfdGFibGVfY29sdW1uLCB7CiAgICAgIGxhYmVsOiBgJHtkZWNvZGVVUklDb21wb25lbnQoCiAgICAgIGdldExhYmVsKG1ldHJpYywgaW5kZXgpCiAgICApfSAke2RlY29kZVVSSUNvbXBvbmVudChnZXRVbml0KGluZGV4KSl9YCwKICAgICAga2V5OiBtZXRyaWMgKyBpbmRleAogICAgfSwgewogICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoc2NvcGUpID0+IFsKICAgICAgICBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbCiAgICAgICAgICAoX3VucmVmKHVzZUxpc3RDb25maWcpKF9fcHJvcHMuY29uZmlnLCBpbmRleCkuaXNMaW5lYXIpCiAgICAgICAgICAgID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKExpbmUsIHsKICAgICAgICAgICAgICAgIGtleTogMCwKICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgW21ldHJpY106IHNjb3BlLnJvd1ttZXRyaWNdICYmIHNjb3BlLnJvd1ttZXRyaWNdLnZhbHVlcywKICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBpbnRlcnZhbFRpbWU6IF9fcHJvcHMuaW50ZXJ2YWxUaW1lLAogICAgICAgICAgICAgICAgY29uZmlnOiB7CiAgICAgICAgICAgIHNob3dYQXhpczogZmFsc2UsCiAgICAgICAgICAgIHNob3dZQXhpczogZmFsc2UsCiAgICAgICAgICAgIHNtYWxsVGlwczogdHJ1ZSwKICAgICAgICAgICAgc2hvd2xhYmVsczogZmFsc2UsCiAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwgbnVsbCwgOCwgWyJkYXRhIiwgImludGVydmFsVGltZSJdKSkKICAgICAgICAgICAgOiAoX3VucmVmKHVzZUxpc3RDb25maWcpKF9fcHJvcHMuY29uZmlnLCBpbmRleCkuaXNBdmcpCiAgICAgICAgICAgICAgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJzcGFuIiwgX2hvaXN0ZWRfMiwgWwogICAgICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9wb3BvdmVyLCB7CiAgICAgICAgICAgICAgICAgICAgcGxhY2VtZW50OiAibGVmdCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDQwMCwKICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyOiAiY2xpY2siCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICByZWZlcmVuY2U6IF93aXRoQ3R4KCgpID0+IFsKICAgICAgICAgICAgICAgICAgICAgIF9jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCBfaG9pc3RlZF8zLCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0ljb24sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uTmFtZTogInRpbWVsaW5lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiAibWlkZGxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogeyJjb2xvciI6IiM0MDllZmYifQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbCiAgICAgICAgICAgICAgICAgICAgICBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShMaW5lLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICBbbWV0cmljXTogc2NvcGUucm93W21ldHJpY10gJiYgc2NvcGUucm93W21ldHJpY10udmFsdWVzLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbFRpbWU6IF9fcHJvcHMuaW50ZXJ2YWxUaW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZzogewogICAgICAgICAgICAgICAgICBzaG93WEF4aXM6IHRydWUsCiAgICAgICAgICAgICAgICAgIHNob3dZQXhpczogdHJ1ZSwKICAgICAgICAgICAgICAgICAgc21hbGxUaXBzOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgc2hvd2xhYmVsczogdHJ1ZSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwgbnVsbCwgOCwgWyJkYXRhIiwgImludGVydmFsVGltZSJdKQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfOiAyCiAgICAgICAgICAgICAgICAgIH0sIDEwMjQpLAogICAgICAgICAgICAgICAgICBfY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgX2hvaXN0ZWRfNSwgWwogICAgICAgICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShDYXJkLCB7CiAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICBbbWV0cmljXTogc2NvcGUucm93W21ldHJpY10gJiYgc2NvcGUucm93W21ldHJpY10uYXZnLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBjb25maWc6IHsgdGV4dEFsaWduOiAnbGVmdCcgfQogICAgICAgICAgICAgICAgICAgIH0sIG51bGwsIDgsIFsiZGF0YSJdKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSkpCiAgICAgICAgICAgICAgOiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soQ2FyZCwgewogICAgICAgICAgICAgICAgICBrZXk6IDIsCiAgICAgICAgICAgICAgICAgIGRhdGE6IHsgW21ldHJpY106IHNjb3BlLnJvd1ttZXRyaWNdIH0sCiAgICAgICAgICAgICAgICAgIGNvbmZpZzogeyB0ZXh0QWxpZ246ICdsZWZ0JyB9CiAgICAgICAgICAgICAgICB9LCBudWxsLCA4LCBbImRhdGEiXSkpCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF86IDIKICAgIH0sIDEwMzIsIFsibGFiZWwiXSkpCiAgfSksIDEyOCkpCn0KfQoKfSk="},{"version":3,"file":null,"sources":["/home/sk117/final-project/apache-skywalking-apm-9.2.0/skywalking-ui/src/views/dashboard/graphs/components/ColumnGraph.vue"],"sourcesContent":["<!-- Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. -->\n\n<template>\n  <el-table-column\n    v-for=\"(metric, index) in colMetrics\"\n    :label=\"`${decodeURIComponent(\n      getLabel(metric, index)\n    )} ${decodeURIComponent(getUnit(index))}`\"\n    :key=\"metric + index\"\n  >\n    <template #default=\"scope\">\n      <div class=\"chart\">\n        <Line\n          v-if=\"useListConfig(config, index).isLinear\"\n          :data=\"{\n            [metric]: scope.row[metric] && scope.row[metric].values,\n          }\"\n          :intervalTime=\"intervalTime\"\n          :config=\"{\n            showXAxis: false,\n            showYAxis: false,\n            smallTips: true,\n            showlabels: false,\n          }\"\n        />\n        <span\n          class=\"item flex-h\"\n          v-else-if=\"useListConfig(config, index).isAvg\"\n        >\n          <el-popover placement=\"left\" :width=\"400\" trigger=\"click\">\n            <template #reference>\n              <span class=\"trend\">\n                <Icon\n                  iconName=\"timeline\"\n                  size=\"middle\"\n                  style=\"color: #409eff\"\n                />\n              </span>\n            </template>\n            <div class=\"view-line\">\n              <Line\n                :data=\"{\n                  [metric]: scope.row[metric] && scope.row[metric].values,\n                }\"\n                :intervalTime=\"intervalTime\"\n                :config=\"{\n                  showXAxis: true,\n                  showYAxis: true,\n                  smallTips: false,\n                  showlabels: true,\n                }\"\n              />\n            </div>\n          </el-popover>\n          <span class=\"value\">\n            <Card\n              :data=\"{\n                [metric]: scope.row[metric] && scope.row[metric].avg,\n              }\"\n              :config=\"{ textAlign: 'left' }\"\n            />\n          </span>\n        </span>\n        <Card\n          v-else\n          :data=\"{ [metric]: scope.row[metric] }\"\n          :config=\"{ textAlign: 'left' }\"\n        />\n      </div>\n    </template>\n  </el-table-column>\n</template>\n\n<script lang=\"ts\" setup>\nimport type { PropType } from \"vue\";\nimport { MetricConfigOpt } from \"@/types/dashboard\";\nimport { useListConfig } from \"@/hooks/useListConfig\";\nimport Line from \"../Line.vue\";\nimport Card from \"../Card.vue\";\n\n/*global defineProps */\nconst props = defineProps({\n  colMetrics: { type: Object },\n  config: {\n    type: Object as PropType<\n      {\n        i: string;\n        metrics: string[];\n        metricTypes: string[];\n      } & { metricConfig: MetricConfigOpt[] }\n    >,\n    default: () => ({}),\n  },\n  intervalTime: { type: Array as PropType<string[]>, default: () => [] },\n});\n\nfunction getUnit(index: string) {\n  const i = Number(index);\n  const u =\n    props.config.metricConfig &&\n    props.config.metricConfig[i] &&\n    props.config.metricConfig[i].unit;\n  if (u) {\n    return `(${encodeURIComponent(u)})`;\n  }\n  return encodeURIComponent(\"\");\n}\nfunction getLabel(metric: string, index: string) {\n  const i = Number(index);\n  const label =\n    props.config.metricConfig &&\n    props.config.metricConfig[i] &&\n    props.config.metricConfig[i].label;\n  if (label) {\n    return encodeURIComponent(label);\n  }\n  return encodeURIComponent(metric);\n}\n</script>\n<style lang=\"scss\" scoped>\n.chart {\n  height: 40px;\n}\n\n.view-line {\n  width: 380px;\n  height: 200px;\n}\n\n.item {\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n}\n\n.trend {\n  width: 30px;\n  display: inline-block;\n  height: 100%;\n  cursor: pointer;\n}\n\n.value {\n  display: inline-block;\n  flex-grow: 2;\n  height: 100%;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;AAuFA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;;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"}]}